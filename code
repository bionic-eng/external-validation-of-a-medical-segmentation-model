!pip install opencv-python matplotlib
%matplotlib inline
import numpy as np
import cv2
import matplotlib.pyplot as plt

# --- Function to simulate MRI ---
def generate_sample_mri_image():
    img = np.zeros((256, 256), dtype=np.uint8)
    cv2.circle(img, (128, 128), 100, (70), -1)         # Brain
    cv2.circle(img, (160, 160), 20, (150), -1)         # Tumor
    return img

# --- Function to simulate tumor mask ---
def generate_sample_mask():
    mask = np.zeros((256, 256), dtype=np.uint8)
    cv2.circle(mask, (160, 160), 20, (255), -1)
    return mask

# --- Analyze if tumor is present ---
def analyze_tumor(mask):
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    if len(contours) == 0:
        return False, None
    largest = max(contours, key=cv2.contourArea)
    x, y, w, h = cv2.boundingRect(largest)
    return True, (x, y, w, h)

# --- Visualize results ---
def visualize_results(img, mask, tumor_box):
    color_img = cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)
    color_img[mask > 0] = [0, 0, 255]  # Red mask
    if tumor_box:
        x, y, w, h = tumor_box
        cv2.rectangle(color_img, (x, y), (x+w, y+h), (0, 255, 0), 2)  # Green box

    plt.figure(figsize=(10, 5))
    plt.subplot(1, 3, 1)
    plt.imshow(img, cmap='gray')
    plt.title("MRI Image")

    plt.subplot(1, 3, 2)
    plt.imshow(mask, cmap='gray')
    plt.title("Predicted Mask")

    plt.subplot(1, 3, 3)
    plt.imshow(color_img)
    plt.title("Result")
    plt.tight_layout()
    plt.show()

# --- Main function ---
def main():
    mri_image = generate_sample_mri_image()
    pred_mask = generate_sample_mask()
    has_cancer, tumor_location = analyze_tumor(pred_mask)

    if has_cancer:
        x, y, w, h = tumor_location
        print("âœ… Patient has cancer")
        print(f"ðŸ§  Tumor location (bounding box): x={x}, y={y}, width={w}, height={h}")
    else:
        print("âœ… Patient does NOT have cancer")

    visualize_results(mri_image, pred_mask, tumor_location if has_cancer else None)

# --- Run the program ---
main()
